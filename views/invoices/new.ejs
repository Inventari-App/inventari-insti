<% layout('layouts/boilerplate')%>

<h3 id="titol"></h3>
<p></p>
<p></p>
<div class="container">
  <table id="add-row-table" class="table table-condensed table-striped">
      <tr>
        <th>Quantitat</th>
        <th>Article</th>
        <th>Preu unitari</th>
        <th>Tipus IVA</th>
        <th>Unitat de destí</th>
        <th>Proveidor</th>
        <th></th>
      </tr>

      <tr class="add-row-row">
        <div class="form-group">
          <td style="display: none;"><input type="hidden" id="tipus" name="tipus" /></td>
          <td style="display: none;"><input type="hidden" id="naturalesa" name="naturalesa" /></td>
          <td>
            <input
              type="number"
              class="numeros form-control quantitat"
              name="quantitat"
              id="quantitat"
              required
            />
          </td>
          <td>
            <input
              class="camps form-control"
              type="text"
              id="article"
              name="article"
              required
              autocomplete="false"
            />
          </td>
          <td>
            <input
              type="number"
              class="numeros form-control preu"
              step="0.01"
              name="preu"
              id="preu"
              required
            />
          </td>
          <td>
            <input
              type="number"
              class="numeros form-control iva"
              step="0.01"
              name="iva"
              id="iva"
              placeholder="%"
              required
            />
          </td>
          <td style="display: none;">
            <input
              name="subtotal"
              id="subtotal"
              required
            />
          </td>
          <td>
            <input
              type="text"
              class="camps form-control"
              name="unitat"
              id="unitat"
              required
              autocomplete="false"
            />
          </td>
          <td>
            <input
              type="text"
              class="camps form-control"
              name="proveidor"
              id="proveidor"
              required
            />
          </td>
          <td>
            <button id="add-row-btn" class="btn btn-primary form-control">
              Afegir
            </button>
          </td>
        </div>
      </tr>

      <div class="row numeros" style="padding-right: 10%" id="crear"></div>
  </table>

    <p></p>
    <p></p>
    <p class="h6">línies de comanda</p>

    <!-- Invoice items -->
    <table class="table table-condensed table-striped" id="invoice-items" style="display: none;">
      <tr>
        <th>Quantitat</th>
        <th>Article</th>
        <th>Preu unitari</th>
        <th>Tipus IVA</th>
        <th>Subtotal</th>
        <th>Unitat de destí</th>
        <th>Proveidor</th>
      </tr>
    </table>

    <table>
      <div class="h5 row numeros">
        <span class="sumatori-total">Total Comanda: 0,00€ </span>
      </div>
    </table>

    <div class="mb-3">
      <button id="send-invoice" class="btn btn-success">
        Finalitza Comanda
      </button>
    </div>
</div>

<script>
  const invoiceItemsTable = document.querySelector("#invoice-items");
  const addRowTable = document.querySelector('#add-row-table')
  const addRowBtn = document.querySelector("#add-row-btn");
  const totalEl = document.querySelector('.sumatori-total')
  const sendInvoiceBtn = document.querySelector('#send-invoice')

  addRowTable.addEventListener("input", (e) => {
    const { target } = e
    const rowEl = target.closest('tr')
    const rowTotal = getRowTotal(rowEl)
    const subtotalInput = addRowTable.querySelector('[name="subtotal"]')
    subtotalInput.value = rowTotal
  })

  addRowBtn.addEventListener("click", () => {
    // add row to table
    // get add row inputs
    const addRowInputs = addRowTable.querySelectorAll('.add-row-row input')
    const inputValues = Array.prototype.map.call(addRowInputs, (inputEl) => {
      return {
        name: inputEl.name,
        value: inputEl.value,
        hidden: inputEl.type === 'hidden'
      }
    })
    const newRowHTML = `
      <tr class='invoice-item'>${inputValues.reduce((acc, curr) => (acc += `
        <th
          name='${curr.name}'
          data-value='${curr.value}'
          style='display: ${curr.hidden ? 'none' : 'table-cell'}'
        >
          ${curr.value}
        </th>
      `), '')}</tr>
    `
    invoiceItemsTable.rows[0].insertAdjacentHTML('afterend', newRowHTML)

    // display invoice items table
    invoiceItemsTable.style.display = 'block'

    calculateTotals()
  })

  invoiceItemsTable.addEventListener('click', (e) => {
    const { target } = e
    const invoiceItemRow = target.closest('tr.invoice-item')
    if (!invoiceItemRow) return
    invoiceItemRow.remove()
    calculateTotals()
  })

  sendInvoiceBtn.addEventListener('click', () => {
    const invoiceData = getInvoiceData()
    console.log(invoiceData)
    fetch('/invoices', {
      method: 'POST',
      mode: 'cors',
      headers: {
        "Content-Type": 'application/json'
      },
      body: JSON.stringify({ invoiceItems: [...invoiceData] })
    })
      .then(res => res.json())
      .then(({ _id }) => window.location.href = _id)
      .catch(e => console.error(e))
  })

  function getRowTotal(rowEl) {
    const quantityEl = rowEl.querySelector('.quantitat')
    const priceEl = rowEl.querySelector('.preu')
    const ivaEl = rowEl.querySelector('.iva')
    if (!quantityEl || !priceEl) return 0
    const total = parseFloat(quantityEl.value) * parseFloat(priceEl.value)
    const iva = ((total) * parseFloat(ivaEl.value) / 100)
    return total + iva
  }

  function getInvoiceData() {
    const rowEls = invoiceItemsTable.querySelectorAll('tr.invoice-item')
    return Array.prototype.map.call(rowEls, rowEl => {
      const rowInvoiceValues = Array.prototype.reduce.call(rowEl.cells, (acc, cellEl) => {
        return {
          ...acc,
          [cellEl.getAttribute('name')]: cellEl.dataset.value
        }
      }, {})
      return rowInvoiceValues
    })
  }

  function calculateTotals() {
    const subtotalEls = invoiceItemsTable.querySelectorAll('[name="subtotal"]')
    const total = Array.prototype.reduce.call(subtotalEls, (acc, curr) => acc += parseFloat(curr.dataset.value), 0)
    totalEl.innerHTML = `Total Comanda: ${total.toFixed(2)}€`
  }
</script>

<script type="module">
  const tipusInputEl = document.querySelector('#tipus')
  const naturalesaInputEl = document.querySelector('#naturalesa')
  const itemsInputEl = document.querySelector('#article');
  const unitatsInputEl = document.querySelector('#unitat');
  const proveidorsInputEl = document.querySelector('#proveidor');
  const _autocomplete = <%- autocomplete %>
  import Autocompleter from '../../utils/Autocompleter.js';

  Autocompleter({
    autocomplete: _autocomplete,
    inputEl: itemsInputEl,
    optionsRoute: '/items/all',
    onSelect: function(suggestion) {
      const {
        nom,
        naturalesa,
        tipus
      } = suggestion
      this.input.value = nom;
      naturalesaInputEl.value = naturalesa
      tipusInputEl.value = tipus
    },
    render: function(suggestion, currentInput) {
      if (suggestion) {
        const nom = suggestion.nom
        const div = document.createElement('div')
        div.setAttribute("id", "autocomplete-article");
        div.textContent = nom
        return div
      }
    }
  })

  Autocompleter({
    autocomplete: _autocomplete,
    inputEl: unitatsInputEl,
    optionsRoute: '/unitats/all',
    onSelect: function(suggestion) {
      const {
        nom,
        zona,
        planta,
        area
      } = suggestion
      this.input.value = nom;
    },
    render: function(suggestion, currentInput) {
      if (suggestion) {
        const nom = suggestion.nom
        const div = document.createElement('div')
        div.setAttribute("id", "autocomplete-unitat");
        div.textContent = nom
        return div
      }
    }
  })

  unitatsInputEl.addEventListener('click', function link(e) {
    e.target.removeEventListener(e.type, link);
    const unitatsDom = document.createElement('div');

    unitatsDom.innerHTML = '<p> <a href= "../unitats/new" class="link-danger" target="parent">Crear Unitat</a>';

    const formulariet = document.querySelector('#crear')
    formulariet.append(unitatsDom);

  })
</script>
